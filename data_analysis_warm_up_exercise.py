# -*- coding: utf-8 -*-
"""Data analysis Warm up exercise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E_GZPkG538-_sBuydYZYyi2oKdMe3ESz
"""

import pandas as pd

dict1 = {'Name': [ 'Priyang', 'Aadhya', 'Krisha', 'Vedant', 'Parshv',
'Mittal', 'Archana'],
'Marks': [98, 89, 99, 87, 90, 83, 99],
'Gender': [ 'Male', 'Female', 'Female', 'Male', 'Male',
'Female', 'Female'] }
df1=pd.DataFrame (dict1)
df1

"""#Find first 3 dataframe"""
df1.head(3)

"""#Find last 3 dataframe"""
df1.tail(3)

"""#Find the number of rows & columns of dataframe"""
df1.shape
print(f"Number of rows:{df1.shape[0]}, Number of columns:{df1.shape[1]} ")

"""# Get Information About Our Dataset Like Total Number Rows, Total Number of Columns, Datatypes of Each Column And Memory Requirement"""
df1.info()

"""#Check Null Values In The Dataset"""
df1.isnull().sum()

"""#Get Overall Statistics About The Dataframe"""
df1.describe(include="all")

"""#Find Unique Values From The Gender Column"""
df1['Gender'].unique()

"""#Find the Number of Unique values from the Gender column"""
df1['Gender'].nunique()

"""#Display Count of Unique Values In Gender Column"""
df1['Gender'].value_counts()

"""#Find Total Number of Students Having Marks Between 90 To 100(Inclusive) Using Between Method"""
df1[df1['Marks'] >= 90 ]

df1[(df1['Marks'] >= 80)  &  (df1['Marks'] <= 90)] # between 80 & 90

len(df1[(df1['Marks'] >= 90)  &  (df1['Marks'] <= 100)])

sum(df1['Marks'].between(90,100))   #Final answer using between method

"""# **Find Average Marks**"""
print(f"The avg marks is: {df1['Marks'].mean()}")

"""# **Apply Method**"""
df1
def AvgMarks(x):
  return x/2
df1["Half marks"] = df1['Marks'].apply(AvgMarks) #using user define function
df1
df1["Half marks"] = df1['Marks'].apply(lambda x:x/2) #Using Lambda Functions
df1

"""# **Map Functions**"""
df1

df1["Male/Female"]=df1['Gender'].map({'Male':1,'Female': 0})
df1

"""# **Delete Column**"""
df1.drop(['Male/Female','Half marks'],axis=1, inplace=True)  #here "inplace=True" is used to modify the existing dataframe

df1

"""# **Print Name of the Columns**"""
df1.columns

df1.index #this is not a method, its a pandas attribute

"""# **Sort The Dataframe As Per The Marks Column**"""
df1.sort_values(by="Marks")

df1.sort_values(by="Marks",ascending=False) #for descending the values

df1.sort_values (by=['Marks', 'Gender'], ascending=False) #sort descending as per 2 columns

"""# **Display name and marks of female students only**"""
df1

df1[df1['Gender']=='Female'][['Name','Marks']]  #[[ its used for 2d list]]

df1[df1['Gender'].isin(['Female'])] [['Name','Marks']]  #Using isin method

