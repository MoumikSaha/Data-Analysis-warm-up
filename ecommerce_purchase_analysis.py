# -*- coding: utf-8 -*-
"""Ecommerce_Purchase_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lci4cNCls7olESHZAiHpMz-YiXgbOMjR
"""

import pandas as pd

data = pd.read_csv('Ecommerce Purchases.csv')
data

"""# **1. Display Top 10 Rows of The Dataset**"""

data.head(10)

"""# 2. Check Last 10 Rows of The Dataset **bold text**"""

data.tail(10)

"""#* 3. Check Datatype of Each Column *"""

data.dtypes

"""# **4. Check null values in the dataset**"""

data.isnull().sum()

"""# **5. How many rows and columns are there in our Dataset?**"""

print(f"Length of columns: {len(data.columns)}")

print(f"Number of rows: {len(data)}")

data.info()  #it gives the overall information of rows & col in dataset

"""# **6. Highest and Lowest Purchase Prices.**"""

data["Purchase Price"].max()

data["Purchase Price"].min()

data["Purchase Price"].describe()

"""# **7. Average Purchase Price**"""

data["Purchase Price"].mean()

"""# **8. How many people have French 'fr' as their Language?**"""

data[data['Language']=='fr'].count()

len(data[data['Language']=='fr'])

"""# **9. Job Title Contains Engineer**"""

len(data[data['Job'].str.contains('engineer',case=False)])  #case=False is used to make the eng. word case insensitive

"""# **10. Find The Email of the person with the following IP Address: 132.207.160.22**"""

data[data['IP Address']=='132.207.160.22']['Email']

"""# **11. How many People have Mastercard as their Credit Card Provider and made a purchase above 50?**"""

len(data[(data['CC Provider']=='Mastercard') & (data['Purchase Price']>50)])

"""# **12. Find the email of the person with the following Credit Card Number: 4664825258997302**"""

data[data['Credit Card']==4664825258997302]['Email']

"""# **13. How many people purchase during the AM and how many people purchase during PM?**"""

data['AM or PM'].value_counts()

"""# **14. How many people have a credit card that expires in 2020?**"""

data['CC Exp Date']

def check_expire():
  count=0
  for date in data['CC Exp Date']:
    if date.split('/')[1]=='20':
      count+=1
  print(count)

check_expire()

len(data[data['CC Exp Date'].apply(lambda x:x[3:] == '20')]) #using slicing in lambda method

"""# **15. What are the top 5 most popular email providers (e.g. gmail.com, yahoo.com, etc...)**"""

list=[]
for email in data ['Email']:
  list.append(email.split('@') [1])

data['temp']=list

data.head(1)

data['temp'].value_counts().head(5)

"""another method

"""

data['Email'] .apply(lambda x:x.split('@') [1] ).value_counts ().head(5)